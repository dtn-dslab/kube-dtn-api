// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.0--rc1
// source: api/proto/v1/kube_dtn.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkIntf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mac  string `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	Ipv4 string `protobuf:"bytes,4,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6 string `protobuf:"bytes,5,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	// newly added
	Ns string `protobuf:"bytes,6,opt,name=ns,proto3" json:"ns,omitempty"`
}

func (x *NetworkIntf) Reset() {
	*x = NetworkIntf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkIntf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkIntf) ProtoMessage() {}

func (x *NetworkIntf) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkIntf.ProtoReflect.Descriptor instead.
func (*NetworkIntf) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkIntf) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NetworkIntf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkIntf) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *NetworkIntf) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *NetworkIntf) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

func (x *NetworkIntf) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

type PhysicalIntf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int32  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mac        string `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	Backend    string `protobuf:"bytes,4,opt,name=backend,proto3" json:"backend,omitempty"`
	DeviceName string `protobuf:"bytes,5,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	NodeName   string `protobuf:"bytes,6,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Vni        int32  `protobuf:"varint,7,opt,name=vni,proto3" json:"vni,omitempty"`
	VtepIp     string `protobuf:"bytes,8,opt,name=vtep_ip,json=vtepIp,proto3" json:"vtep_ip,omitempty"`
	DstPort    int32  `protobuf:"varint,9,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	// newly added
	Ns string `protobuf:"bytes,10,opt,name=ns,proto3" json:"ns,omitempty"`
}

func (x *PhysicalIntf) Reset() {
	*x = PhysicalIntf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysicalIntf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalIntf) ProtoMessage() {}

func (x *PhysicalIntf) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalIntf.ProtoReflect.Descriptor instead.
func (*PhysicalIntf) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{1}
}

func (x *PhysicalIntf) GetUid() int32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PhysicalIntf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PhysicalIntf) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *PhysicalIntf) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *PhysicalIntf) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *PhysicalIntf) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *PhysicalIntf) GetVni() int32 {
	if x != nil {
		return x.Vni
	}
	return 0
}

func (x *PhysicalIntf) GetVtepIp() string {
	if x != nil {
		return x.VtepIp
	}
	return ""
}

func (x *PhysicalIntf) GetDstPort() int32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *PhysicalIntf) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

type NetworkNodeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *NetworkNodeQuery) Reset() {
	*x = NetworkNodeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkNodeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkNodeQuery) ProtoMessage() {}

func (x *NetworkNodeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkNodeQuery.ProtoReflect.Descriptor instead.
func (*NetworkNodeQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkNodeQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkNodeQuery) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Src            int32           `protobuf:"varint,2,opt,name=src,proto3" json:"src,omitempty"`
	Dst            int32           `protobuf:"varint,3,opt,name=dst,proto3" json:"dst,omitempty"`
	Properties     *LinkProperties `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
	UniDirectional bool            `protobuf:"varint,5,opt,name=uni_directional,json=uniDirectional,proto3" json:"uni_directional,omitempty"` // Not support update this field! Please delete and re-add
	// newly added
	SrcNs     string `protobuf:"bytes,6,opt,name=src_ns,json=srcNs,proto3" json:"src_ns,omitempty"`
	DstNs     string `protobuf:"bytes,7,opt,name=dst_ns,json=dstNs,proto3" json:"dst_ns,omitempty"`
	SectionId string `protobuf:"bytes,8,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{3}
}

func (x *Link) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Link) GetSrc() int32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *Link) GetDst() int32 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *Link) GetProperties() *LinkProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Link) GetUniDirectional() bool {
	if x != nil {
		return x.UniDirectional
	}
	return false
}

func (x *Link) GetSrcNs() string {
	if x != nil {
		return x.SrcNs
	}
	return ""
}

func (x *Link) GetDstNs() string {
	if x != nil {
		return x.DstNs
	}
	return ""
}

func (x *Link) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

type LinkProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Latency in duration string format, e.g. "300ms", "1.5s".
	// Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
	Latency string `protobuf:"bytes,1,opt,name=latency,proto3" json:"latency,omitempty"`
	// Latency correlation in float percentage, e.g. "55.0".
	LatencyCorr string `protobuf:"bytes,2,opt,name=latency_corr,json=latencyCorr,proto3" json:"latency_corr,omitempty"`
	// Jitter in duration string format, e.g. "300ms", "1.5s".
	// Valid time units are "ns", "us" (or "Âµs"), "ms", "s", "m", "h".
	Jitter string `protobuf:"bytes,3,opt,name=jitter,proto3" json:"jitter,omitempty"`
	// Loss rate in float percentage, e.g. "55.0".
	Loss string `protobuf:"bytes,4,opt,name=loss,proto3" json:"loss,omitempty"`
	// Loss correlation in float percentage, e.g. "55.0".
	LossCorr string `protobuf:"bytes,5,opt,name=loss_corr,json=lossCorr,proto3" json:"loss_corr,omitempty"`
	// Bandwidth rate limit, e.g. 1000(bit/s), 100kbit, 100Mbps, 1Gibps.
	// For more information, refer to https://man7.org/linux/man-pages/man8/tc.8.html.
	Rate string `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`
	// Gap every N packets
	Gap uint32 `protobuf:"varint,7,opt,name=gap,proto3" json:"gap,omitempty"`
	// Duplicate rate in float percentage, e.g. "55.0".
	Duplicate string `protobuf:"bytes,8,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
	// Duplicate correlation in float percentage, e.g. "55.0".
	DuplicateCorr string `protobuf:"bytes,9,opt,name=duplicate_corr,json=duplicateCorr,proto3" json:"duplicate_corr,omitempty"`
	// Reorder probability in float percentage, e.g. "55.0".
	ReorderProb string `protobuf:"bytes,10,opt,name=reorder_prob,json=reorderProb,proto3" json:"reorder_prob,omitempty"`
	// Reorder correlation in float percentage, e.g. "55.0".
	ReorderCorr string `protobuf:"bytes,11,opt,name=reorder_corr,json=reorderCorr,proto3" json:"reorder_corr,omitempty"`
	// Corrupt probability in float percentage, e.g. "55.0".
	CorruptProb string `protobuf:"bytes,12,opt,name=corrupt_prob,json=corruptProb,proto3" json:"corrupt_prob,omitempty"`
	// Corrupt correlation in float percentage, e.g. "55.0".
	CorruptCorr string `protobuf:"bytes,13,opt,name=corrupt_corr,json=corruptCorr,proto3" json:"corrupt_corr,omitempty"`
}

func (x *LinkProperties) Reset() {
	*x = LinkProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkProperties) ProtoMessage() {}

func (x *LinkProperties) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkProperties.ProtoReflect.Descriptor instead.
func (*LinkProperties) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{4}
}

func (x *LinkProperties) GetLatency() string {
	if x != nil {
		return x.Latency
	}
	return ""
}

func (x *LinkProperties) GetLatencyCorr() string {
	if x != nil {
		return x.LatencyCorr
	}
	return ""
}

func (x *LinkProperties) GetJitter() string {
	if x != nil {
		return x.Jitter
	}
	return ""
}

func (x *LinkProperties) GetLoss() string {
	if x != nil {
		return x.Loss
	}
	return ""
}

func (x *LinkProperties) GetLossCorr() string {
	if x != nil {
		return x.LossCorr
	}
	return ""
}

func (x *LinkProperties) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *LinkProperties) GetGap() uint32 {
	if x != nil {
		return x.Gap
	}
	return 0
}

func (x *LinkProperties) GetDuplicate() string {
	if x != nil {
		return x.Duplicate
	}
	return ""
}

func (x *LinkProperties) GetDuplicateCorr() string {
	if x != nil {
		return x.DuplicateCorr
	}
	return ""
}

func (x *LinkProperties) GetReorderProb() string {
	if x != nil {
		return x.ReorderProb
	}
	return ""
}

func (x *LinkProperties) GetReorderCorr() string {
	if x != nil {
		return x.ReorderCorr
	}
	return ""
}

func (x *LinkProperties) GetCorruptProb() string {
	if x != nil {
		return x.CorruptProb
	}
	return ""
}

func (x *LinkProperties) GetCorruptCorr() string {
	if x != nil {
		return x.CorruptCorr
	}
	return ""
}

type PodQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	KubeNs string `protobuf:"bytes,2,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	NetNs  string `protobuf:"bytes,3,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
}

func (x *PodQuery) Reset() {
	*x = PodQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodQuery) ProtoMessage() {}

func (x *PodQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodQuery.ProtoReflect.Descriptor instead.
func (*PodQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{5}
}

func (x *PodQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodQuery) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *PodQuery) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

type InternalLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	KubeNs     string          `protobuf:"bytes,2,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	NetNs      string          `protobuf:"bytes,3,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
	Remote     string          `protobuf:"bytes,4,opt,name=remote,proto3" json:"remote,omitempty"`
	LocalName  string          `protobuf:"bytes,5,opt,name=local_name,json=localName,proto3" json:"local_name,omitempty"`
	LocalIntf  string          `protobuf:"bytes,6,opt,name=local_intf,json=localIntf,proto3" json:"local_intf,omitempty"`
	LocalMac   string          `protobuf:"bytes,7,opt,name=local_mac,json=localMac,proto3" json:"local_mac,omitempty"`
	PeerName   string          `protobuf:"bytes,8,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	PeerIntf   string          `protobuf:"bytes,9,opt,name=peer_intf,json=peerIntf,proto3" json:"peer_intf,omitempty"`
	PeerMac    string          `protobuf:"bytes,10,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	Properties *LinkProperties `protobuf:"bytes,11,opt,name=properties,proto3" json:"properties,omitempty"`
	// newly added
	PeerKubeNs string `protobuf:"bytes,12,opt,name=peer_kube_ns,json=peerKubeNs,proto3" json:"peer_kube_ns,omitempty"`
	PeerNetNs  string `protobuf:"bytes,13,opt,name=peer_net_ns,json=peerNetNs,proto3" json:"peer_net_ns,omitempty"`
	SectionId  string `protobuf:"bytes,14,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	// If rawDevice, set it!
	LocalRawDeviceName string `protobuf:"bytes,15,opt,name=local_raw_device_name,json=localRawDeviceName,proto3" json:"local_raw_device_name,omitempty"`
	PeerRawDeviceName  string `protobuf:"bytes,16,opt,name=peer_raw_device_name,json=peerRawDeviceName,proto3" json:"peer_raw_device_name,omitempty"`
	LocalIntfType      string `protobuf:"bytes,17,opt,name=local_intf_type,json=localIntfType,proto3" json:"local_intf_type,omitempty"`
	PeerIntfType       string `protobuf:"bytes,18,opt,name=peer_intf_type,json=peerIntfType,proto3" json:"peer_intf_type,omitempty"`
}

func (x *InternalLink) Reset() {
	*x = InternalLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalLink) ProtoMessage() {}

func (x *InternalLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalLink.ProtoReflect.Descriptor instead.
func (*InternalLink) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{6}
}

func (x *InternalLink) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *InternalLink) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *InternalLink) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

func (x *InternalLink) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *InternalLink) GetLocalName() string {
	if x != nil {
		return x.LocalName
	}
	return ""
}

func (x *InternalLink) GetLocalIntf() string {
	if x != nil {
		return x.LocalIntf
	}
	return ""
}

func (x *InternalLink) GetLocalMac() string {
	if x != nil {
		return x.LocalMac
	}
	return ""
}

func (x *InternalLink) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *InternalLink) GetPeerIntf() string {
	if x != nil {
		return x.PeerIntf
	}
	return ""
}

func (x *InternalLink) GetPeerMac() string {
	if x != nil {
		return x.PeerMac
	}
	return ""
}

func (x *InternalLink) GetProperties() *LinkProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *InternalLink) GetPeerKubeNs() string {
	if x != nil {
		return x.PeerKubeNs
	}
	return ""
}

func (x *InternalLink) GetPeerNetNs() string {
	if x != nil {
		return x.PeerNetNs
	}
	return ""
}

func (x *InternalLink) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *InternalLink) GetLocalRawDeviceName() string {
	if x != nil {
		return x.LocalRawDeviceName
	}
	return ""
}

func (x *InternalLink) GetPeerRawDeviceName() string {
	if x != nil {
		return x.PeerRawDeviceName
	}
	return ""
}

func (x *InternalLink) GetLocalIntfType() string {
	if x != nil {
		return x.LocalIntfType
	}
	return ""
}

func (x *InternalLink) GetPeerIntfType() string {
	if x != nil {
		return x.PeerIntfType
	}
	return ""
}

type ApplyLinksQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Links   []*Link                `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *ApplyLinksQuery) Reset() {
	*x = ApplyLinksQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyLinksQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyLinksQuery) ProtoMessage() {}

func (x *ApplyLinksQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyLinksQuery.ProtoReflect.Descriptor instead.
func (*ApplyLinksQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{7}
}

func (x *ApplyLinksQuery) GetVersion() *timestamppb.Timestamp {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ApplyLinksQuery) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type ApplyLinksBatchInNsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Links       []*Link                `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
	FullyUpdate bool                   `protobuf:"varint,3,opt,name=fully_update,json=fullyUpdate,proto3" json:"fully_update,omitempty"`
	Ns          string                 `protobuf:"bytes,4,opt,name=ns,proto3" json:"ns,omitempty"`
	SectionId   string                 `protobuf:"bytes,5,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
}

func (x *ApplyLinksBatchInNsQuery) Reset() {
	*x = ApplyLinksBatchInNsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyLinksBatchInNsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyLinksBatchInNsQuery) ProtoMessage() {}

func (x *ApplyLinksBatchInNsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyLinksBatchInNsQuery.ProtoReflect.Descriptor instead.
func (*ApplyLinksBatchInNsQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{8}
}

func (x *ApplyLinksBatchInNsQuery) GetVersion() *timestamppb.Timestamp {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ApplyLinksBatchInNsQuery) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ApplyLinksBatchInNsQuery) GetFullyUpdate() bool {
	if x != nil {
		return x.FullyUpdate
	}
	return false
}

func (x *ApplyLinksBatchInNsQuery) GetNs() string {
	if x != nil {
		return x.Ns
	}
	return ""
}

func (x *ApplyLinksBatchInNsQuery) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

// Template for link query
type LinkQueryModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Src            int32  `protobuf:"varint,2,opt,name=src,proto3" json:"src,omitempty"`
	Dst            int32  `protobuf:"varint,3,opt,name=dst,proto3" json:"dst,omitempty"`
	UniDirectional string `protobuf:"bytes,5,opt,name=uni_directional,json=uniDirectional,proto3" json:"uni_directional,omitempty"` // only "true"/"false" will join, others have no effect
	// newly added
	SrcNs     string `protobuf:"bytes,6,opt,name=src_ns,json=srcNs,proto3" json:"src_ns,omitempty"`
	DstNs     string `protobuf:"bytes,7,opt,name=dst_ns,json=dstNs,proto3" json:"dst_ns,omitempty"`
	SectionId string `protobuf:"bytes,8,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	Phase     string `protobuf:"bytes,9,opt,name=phase,proto3" json:"phase,omitempty"`
}

func (x *LinkQueryModel) Reset() {
	*x = LinkQueryModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkQueryModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkQueryModel) ProtoMessage() {}

func (x *LinkQueryModel) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkQueryModel.ProtoReflect.Descriptor instead.
func (*LinkQueryModel) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{9}
}

func (x *LinkQueryModel) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LinkQueryModel) GetSrc() int32 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *LinkQueryModel) GetDst() int32 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *LinkQueryModel) GetUniDirectional() string {
	if x != nil {
		return x.UniDirectional
	}
	return ""
}

func (x *LinkQueryModel) GetSrcNs() string {
	if x != nil {
		return x.SrcNs
	}
	return ""
}

func (x *LinkQueryModel) GetDstNs() string {
	if x != nil {
		return x.DstNs
	}
	return ""
}

func (x *LinkQueryModel) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *LinkQueryModel) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

type LinkQueryRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links []*Link `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *LinkQueryRes) Reset() {
	*x = LinkQueryRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkQueryRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkQueryRes) ProtoMessage() {}

func (x *LinkQueryRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkQueryRes.ProtoReflect.Descriptor instead.
func (*LinkQueryRes) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{10}
}

func (x *LinkQueryRes) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type ListLinksQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query []*LinkQueryModel `protobuf:"bytes,1,rep,name=query,proto3" json:"query,omitempty"`
}

func (x *ListLinksQuery) Reset() {
	*x = ListLinksQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksQuery) ProtoMessage() {}

func (x *ListLinksQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksQuery.ProtoReflect.Descriptor instead.
func (*ListLinksQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{11}
}

func (x *ListLinksQuery) GetQuery() []*LinkQueryModel {
	if x != nil {
		return x.Query
	}
	return nil
}

type LinksBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response    bool            `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	AllQueryRes []*LinkQueryRes `protobuf:"bytes,2,rep,name=all_query_res,json=allQueryRes,proto3" json:"all_query_res,omitempty"`
}

func (x *LinksBatchResponse) Reset() {
	*x = LinksBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinksBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinksBatchResponse) ProtoMessage() {}

func (x *LinksBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinksBatchResponse.ProtoReflect.Descriptor instead.
func (*LinksBatchResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{12}
}

func (x *LinksBatchResponse) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

func (x *LinksBatchResponse) GetAllQueryRes() []*LinkQueryRes {
	if x != nil {
		return x.AllQueryRes
	}
	return nil
}

type DeleteLinksQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query []*LinkQueryModel `protobuf:"bytes,1,rep,name=query,proto3" json:"query,omitempty"`
}

func (x *DeleteLinksQuery) Reset() {
	*x = DeleteLinksQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLinksQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLinksQuery) ProtoMessage() {}

func (x *DeleteLinksQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLinksQuery.ProtoReflect.Descriptor instead.
func (*DeleteLinksQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteLinksQuery) GetQuery() []*LinkQueryModel {
	if x != nil {
		return x.Query
	}
	return nil
}

type InternalLinksBatchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links []*InternalLink `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *InternalLinksBatchQuery) Reset() {
	*x = InternalLinksBatchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalLinksBatchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalLinksBatchQuery) ProtoMessage() {}

func (x *InternalLinksBatchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalLinksBatchQuery.ProtoReflect.Descriptor instead.
func (*InternalLinksBatchQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{14}
}

func (x *InternalLinksBatchQuery) GetLinks() []*InternalLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type BoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response bool `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *BoolResponse) Reset() {
	*x = BoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResponse) ProtoMessage() {}

func (x *BoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResponse.ProtoReflect.Descriptor instead.
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{15}
}

func (x *BoolResponse) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

var File_api_proto_v1_kube_dtn_proto protoreflect.FileDescriptor

var file_api_proto_v1_kube_dtn_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6b,
	0x75, 0x62, 0x65, 0x5f, 0x64, 0x74, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74,
	0x66, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76,
	0x36, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e,
	0x73, 0x22, 0xf4, 0x01, 0x0a, 0x0c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e,
	0x74, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x6e, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x76, 0x6e, 0x69, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x74, 0x65, 0x70, 0x5f, 0x69, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x74, 0x65, 0x70, 0x49, 0x70, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x22, 0x44, 0x0a, 0x10, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xe6,
	0x01, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72,
	0x63, 0x5f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x72, 0x63, 0x4e,
	0x73, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x73, 0x74, 0x4e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8d, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x63, 0x6f, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x6f, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x67, 0x61, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x72,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f,
	0x63, 0x6f, 0x72, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72,
	0x75, 0x70, 0x74, 0x43, 0x6f, 0x72, 0x72, 0x22, 0x4e, 0x0a, 0x08, 0x50, 0x6f, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x75, 0x62, 0x65, 0x5f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x75, 0x62, 0x65, 0x4e, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x22, 0xdf, 0x04, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x75,
	0x62, 0x65, 0x5f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x75, 0x62,
	0x65, 0x4e, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x66,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4d,
	0x61, 0x63, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6b,
	0x75, 0x62, 0x65, 0x5f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65,
	0x65, 0x72, 0x4b, 0x75, 0x62, 0x65, 0x4e, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x65, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x4e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x61, 0x77,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x65, 0x65, 0x72, 0x52, 0x61,
	0x77, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x67, 0x0a, 0x0f, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x4e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x34, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x75, 0x6c,
	0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x72, 0x63,
	0x5f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x72, 0x63, 0x4e, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x73, 0x74, 0x4e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x0c,
	0x4c, 0x69, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x3a, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x28,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x66, 0x0a, 0x12, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x61, 0x6c,
	0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x22, 0x3c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x41,
	0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x6c, 0x69, 0x6e,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x22, 0x2a, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x80, 0x02,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x13, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x4e, 0x73,
	0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x4e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x14, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x32, 0x87, 0x04, 0x0a, 0x06, 0x44, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x0e, 0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50,
	0x6f, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e,
	0x6f, 0x64, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x15, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49,
	0x6e, 0x74, 0x66, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x49, 0x6e, 0x74, 0x66, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x17, 0x55, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x6e,
	0x74, 0x66, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x49, 0x6e, 0x74, 0x66, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x75, 0x70, 0x50,
	0x6f, 0x64, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6f, 0x64,
	0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0b, 0x5a, 0x09, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_v1_kube_dtn_proto_rawDescOnce sync.Once
	file_api_proto_v1_kube_dtn_proto_rawDescData = file_api_proto_v1_kube_dtn_proto_rawDesc
)

func file_api_proto_v1_kube_dtn_proto_rawDescGZIP() []byte {
	file_api_proto_v1_kube_dtn_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_kube_dtn_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_kube_dtn_proto_rawDescData)
	})
	return file_api_proto_v1_kube_dtn_proto_rawDescData
}

var file_api_proto_v1_kube_dtn_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_proto_v1_kube_dtn_proto_goTypes = []interface{}{
	(*NetworkIntf)(nil),              // 0: pb.NetworkIntf
	(*PhysicalIntf)(nil),             // 1: pb.PhysicalIntf
	(*NetworkNodeQuery)(nil),         // 2: pb.NetworkNodeQuery
	(*Link)(nil),                     // 3: pb.Link
	(*LinkProperties)(nil),           // 4: pb.LinkProperties
	(*PodQuery)(nil),                 // 5: pb.PodQuery
	(*InternalLink)(nil),             // 6: pb.InternalLink
	(*ApplyLinksQuery)(nil),          // 7: pb.ApplyLinksQuery
	(*ApplyLinksBatchInNsQuery)(nil), // 8: pb.ApplyLinksBatchInNsQuery
	(*LinkQueryModel)(nil),           // 9: pb.LinkQueryModel
	(*LinkQueryRes)(nil),             // 10: pb.LinkQueryRes
	(*ListLinksQuery)(nil),           // 11: pb.ListLinksQuery
	(*LinksBatchResponse)(nil),       // 12: pb.LinksBatchResponse
	(*DeleteLinksQuery)(nil),         // 13: pb.DeleteLinksQuery
	(*InternalLinksBatchQuery)(nil),  // 14: pb.InternalLinksBatchQuery
	(*BoolResponse)(nil),             // 15: pb.BoolResponse
	(*timestamppb.Timestamp)(nil),    // 16: google.protobuf.Timestamp
}
var file_api_proto_v1_kube_dtn_proto_depIdxs = []int32{
	4,  // 0: pb.Link.properties:type_name -> pb.LinkProperties
	4,  // 1: pb.InternalLink.properties:type_name -> pb.LinkProperties
	16, // 2: pb.ApplyLinksQuery.version:type_name -> google.protobuf.Timestamp
	3,  // 3: pb.ApplyLinksQuery.links:type_name -> pb.Link
	16, // 4: pb.ApplyLinksBatchInNsQuery.version:type_name -> google.protobuf.Timestamp
	3,  // 5: pb.ApplyLinksBatchInNsQuery.links:type_name -> pb.Link
	3,  // 6: pb.LinkQueryRes.links:type_name -> pb.Link
	9,  // 7: pb.ListLinksQuery.query:type_name -> pb.LinkQueryModel
	10, // 8: pb.LinksBatchResponse.all_query_res:type_name -> pb.LinkQueryRes
	9,  // 9: pb.DeleteLinksQuery.query:type_name -> pb.LinkQueryModel
	6,  // 10: pb.InternalLinksBatchQuery.links:type_name -> pb.InternalLink
	7,  // 11: pb.ControllerExternal.ApplyLinks:input_type -> pb.ApplyLinksQuery
	8,  // 12: pb.ControllerExternal.ApplyLinksBatchInNs:input_type -> pb.ApplyLinksBatchInNsQuery
	11, // 13: pb.ControllerExternal.ListLinks:input_type -> pb.ListLinksQuery
	13, // 14: pb.ControllerExternal.DeleteLinks:input_type -> pb.DeleteLinksQuery
	14, // 15: pb.Daemon.AddLinks:input_type -> pb.InternalLinksBatchQuery
	14, // 16: pb.Daemon.DeleteLinks:input_type -> pb.InternalLinksBatchQuery
	14, // 17: pb.Daemon.UpdateLinks:input_type -> pb.InternalLinksBatchQuery
	2,  // 18: pb.Daemon.ConfigurePod:input_type -> pb.NetworkNodeQuery
	2,  // 19: pb.Daemon.UnconfigurePod:input_type -> pb.NetworkNodeQuery
	1,  // 20: pb.Daemon.ConfigurePhysicalIntf:input_type -> pb.PhysicalIntf
	1,  // 21: pb.Daemon.UnconfigurePhysicalIntf:input_type -> pb.PhysicalIntf
	5,  // 22: pb.Daemon.SetupPod:input_type -> pb.PodQuery
	5,  // 23: pb.Daemon.DestroyPod:input_type -> pb.PodQuery
	15, // 24: pb.ControllerExternal.ApplyLinks:output_type -> pb.BoolResponse
	15, // 25: pb.ControllerExternal.ApplyLinksBatchInNs:output_type -> pb.BoolResponse
	12, // 26: pb.ControllerExternal.ListLinks:output_type -> pb.LinksBatchResponse
	15, // 27: pb.ControllerExternal.DeleteLinks:output_type -> pb.BoolResponse
	15, // 28: pb.Daemon.AddLinks:output_type -> pb.BoolResponse
	15, // 29: pb.Daemon.DeleteLinks:output_type -> pb.BoolResponse
	15, // 30: pb.Daemon.UpdateLinks:output_type -> pb.BoolResponse
	15, // 31: pb.Daemon.ConfigurePod:output_type -> pb.BoolResponse
	15, // 32: pb.Daemon.UnconfigurePod:output_type -> pb.BoolResponse
	15, // 33: pb.Daemon.ConfigurePhysicalIntf:output_type -> pb.BoolResponse
	15, // 34: pb.Daemon.UnconfigurePhysicalIntf:output_type -> pb.BoolResponse
	15, // 35: pb.Daemon.SetupPod:output_type -> pb.BoolResponse
	15, // 36: pb.Daemon.DestroyPod:output_type -> pb.BoolResponse
	24, // [24:37] is the sub-list for method output_type
	11, // [11:24] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_proto_v1_kube_dtn_proto_init() }
func file_api_proto_v1_kube_dtn_proto_init() {
	if File_api_proto_v1_kube_dtn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_v1_kube_dtn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkIntf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysicalIntf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkNodeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyLinksQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyLinksBatchInNsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkQueryModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkQueryRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLinksQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinksBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLinksQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalLinksBatchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_kube_dtn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_api_proto_v1_kube_dtn_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_kube_dtn_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_kube_dtn_proto_msgTypes,
	}.Build()
	File_api_proto_v1_kube_dtn_proto = out.File
	file_api_proto_v1_kube_dtn_proto_rawDesc = nil
	file_api_proto_v1_kube_dtn_proto_goTypes = nil
	file_api_proto_v1_kube_dtn_proto_depIdxs = nil
}
