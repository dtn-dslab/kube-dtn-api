// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: api/proto/v1/kube_dtn.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkIntf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mac  string `protobuf:"bytes,3,opt,name=mac,proto3" json:"mac,omitempty"`
	Ipv4 string `protobuf:"bytes,4,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6 string `protobuf:"bytes,5,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
}

func (x *NetworkIntf) Reset() {
	*x = NetworkIntf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkIntf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkIntf) ProtoMessage() {}

func (x *NetworkIntf) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkIntf.ProtoReflect.Descriptor instead.
func (*NetworkIntf) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkIntf) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *NetworkIntf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkIntf) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *NetworkIntf) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *NetworkIntf) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

type NetworkNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace    string         `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NetworkIntfs []*NetworkIntf `protobuf:"bytes,3,rep,name=network_intfs,json=networkIntfs,proto3" json:"network_intfs,omitempty"`
	PodStatus    *PodStatus     `protobuf:"bytes,4,opt,name=pod_status,json=podStatus,proto3" json:"pod_status,omitempty"`
}

func (x *NetworkNode) Reset() {
	*x = NetworkNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkNode) ProtoMessage() {}

func (x *NetworkNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkNode.ProtoReflect.Descriptor instead.
func (*NetworkNode) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkNode) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NetworkNode) GetNetworkIntfs() []*NetworkIntf {
	if x != nil {
		return x.NetworkIntfs
	}
	return nil
}

func (x *NetworkNode) GetPodStatus() *PodStatus {
	if x != nil {
		return x.PodStatus
	}
	return nil
}

type PodStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaemonIp string `protobuf:"bytes,1,opt,name=daemon_ip,json=daemonIp,proto3" json:"daemon_ip,omitempty"`
	NetNs    string `protobuf:"bytes,2,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
	PodType  string `protobuf:"bytes,3,opt,name=pod_type,json=podType,proto3" json:"pod_type,omitempty"`
	PodIp    string `protobuf:"bytes,4,opt,name=pod_ip,json=podIp,proto3" json:"pod_ip,omitempty"`
}

func (x *PodStatus) Reset() {
	*x = PodStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodStatus) ProtoMessage() {}

func (x *PodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodStatus.ProtoReflect.Descriptor instead.
func (*PodStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{2}
}

func (x *PodStatus) GetDaemonIp() string {
	if x != nil {
		return x.DaemonIp
	}
	return ""
}

func (x *PodStatus) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

func (x *PodStatus) GetPodType() string {
	if x != nil {
		return x.PodType
	}
	return ""
}

func (x *PodStatus) GetPodIp() string {
	if x != nil {
		return x.PodIp
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Src            int64           `protobuf:"varint,2,opt,name=src,proto3" json:"src,omitempty"`
	Dst            int64           `protobuf:"varint,3,opt,name=dst,proto3" json:"dst,omitempty"`
	Properties     *LinkProperties `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
	UniDirectional bool            `protobuf:"varint,5,opt,name=uni_directional,json=uniDirectional,proto3" json:"uni_directional,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{3}
}

func (x *Link) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Link) GetSrc() int64 {
	if x != nil {
		return x.Src
	}
	return 0
}

func (x *Link) GetDst() int64 {
	if x != nil {
		return x.Dst
	}
	return 0
}

func (x *Link) GetProperties() *LinkProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Link) GetUniDirectional() bool {
	if x != nil {
		return x.UniDirectional
	}
	return false
}

type LinkProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Latency in duration string format, e.g. "300ms", "1.5s".
	// Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
	Latency string `protobuf:"bytes,1,opt,name=latency,proto3" json:"latency,omitempty"`
	// Latency correlation in float percentage, e.g. "55.0".
	LatencyCorr string `protobuf:"bytes,2,opt,name=latency_corr,json=latencyCorr,proto3" json:"latency_corr,omitempty"`
	// Jitter in duration string format, e.g. "300ms", "1.5s".
	// Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
	Jitter string `protobuf:"bytes,3,opt,name=jitter,proto3" json:"jitter,omitempty"`
	// Loss rate in float percentage, e.g. "55.0".
	Loss string `protobuf:"bytes,4,opt,name=loss,proto3" json:"loss,omitempty"`
	// Loss correlation in float percentage, e.g. "55.0".
	LossCorr string `protobuf:"bytes,5,opt,name=loss_corr,json=lossCorr,proto3" json:"loss_corr,omitempty"`
	// Bandwidth rate limit, e.g. 1000(bit/s), 100kbit, 100Mbps, 1Gibps.
	// For more information, refer to https://man7.org/linux/man-pages/man8/tc.8.html.
	Rate string `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`
	// Gap every N packets
	Gap uint32 `protobuf:"varint,7,opt,name=gap,proto3" json:"gap,omitempty"`
	// Duplicate rate in float percentage, e.g. "55.0".
	Duplicate string `protobuf:"bytes,8,opt,name=duplicate,proto3" json:"duplicate,omitempty"`
	// Duplicate correlation in float percentage, e.g. "55.0".
	DuplicateCorr string `protobuf:"bytes,9,opt,name=duplicate_corr,json=duplicateCorr,proto3" json:"duplicate_corr,omitempty"`
	// Reorder probability in float percentage, e.g. "55.0".
	ReorderProb string `protobuf:"bytes,10,opt,name=reorder_prob,json=reorderProb,proto3" json:"reorder_prob,omitempty"`
	// Reorder correlation in float percentage, e.g. "55.0".
	ReorderCorr string `protobuf:"bytes,11,opt,name=reorder_corr,json=reorderCorr,proto3" json:"reorder_corr,omitempty"`
	// Corrupt probability in float percentage, e.g. "55.0".
	CorruptProb string `protobuf:"bytes,12,opt,name=corrupt_prob,json=corruptProb,proto3" json:"corrupt_prob,omitempty"`
	// Corrupt correlation in float percentage, e.g. "55.0".
	CorruptCorr string `protobuf:"bytes,13,opt,name=corrupt_corr,json=corruptCorr,proto3" json:"corrupt_corr,omitempty"`
}

func (x *LinkProperties) Reset() {
	*x = LinkProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkProperties) ProtoMessage() {}

func (x *LinkProperties) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkProperties.ProtoReflect.Descriptor instead.
func (*LinkProperties) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{4}
}

func (x *LinkProperties) GetLatency() string {
	if x != nil {
		return x.Latency
	}
	return ""
}

func (x *LinkProperties) GetLatencyCorr() string {
	if x != nil {
		return x.LatencyCorr
	}
	return ""
}

func (x *LinkProperties) GetJitter() string {
	if x != nil {
		return x.Jitter
	}
	return ""
}

func (x *LinkProperties) GetLoss() string {
	if x != nil {
		return x.Loss
	}
	return ""
}

func (x *LinkProperties) GetLossCorr() string {
	if x != nil {
		return x.LossCorr
	}
	return ""
}

func (x *LinkProperties) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *LinkProperties) GetGap() uint32 {
	if x != nil {
		return x.Gap
	}
	return 0
}

func (x *LinkProperties) GetDuplicate() string {
	if x != nil {
		return x.Duplicate
	}
	return ""
}

func (x *LinkProperties) GetDuplicateCorr() string {
	if x != nil {
		return x.DuplicateCorr
	}
	return ""
}

func (x *LinkProperties) GetReorderProb() string {
	if x != nil {
		return x.ReorderProb
	}
	return ""
}

func (x *LinkProperties) GetReorderCorr() string {
	if x != nil {
		return x.ReorderCorr
	}
	return ""
}

func (x *LinkProperties) GetCorruptProb() string {
	if x != nil {
		return x.CorruptProb
	}
	return ""
}

func (x *LinkProperties) GetCorruptCorr() string {
	if x != nil {
		return x.CorruptCorr
	}
	return ""
}

type PodQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	KubeNs string `protobuf:"bytes,2,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	NetNs  string `protobuf:"bytes,3,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
}

func (x *PodQuery) Reset() {
	*x = PodQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodQuery) ProtoMessage() {}

func (x *PodQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodQuery.ProtoReflect.Descriptor instead.
func (*PodQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{5}
}

func (x *PodQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodQuery) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *PodQuery) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

type InternalLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	KubeNs     string          `protobuf:"bytes,2,opt,name=kube_ns,json=kubeNs,proto3" json:"kube_ns,omitempty"`
	NetNs      string          `protobuf:"bytes,3,opt,name=net_ns,json=netNs,proto3" json:"net_ns,omitempty"`
	Remote     string          `protobuf:"bytes,4,opt,name=remote,proto3" json:"remote,omitempty"`
	LocalName  string          `protobuf:"bytes,5,opt,name=local_name,json=localName,proto3" json:"local_name,omitempty"`
	LocalIntf  string          `protobuf:"bytes,6,opt,name=local_intf,json=localIntf,proto3" json:"local_intf,omitempty"`
	LocalMac   string          `protobuf:"bytes,7,opt,name=local_mac,json=localMac,proto3" json:"local_mac,omitempty"`
	PeerName   string          `protobuf:"bytes,8,opt,name=peer_name,json=peerName,proto3" json:"peer_name,omitempty"`
	PeerIntf   string          `protobuf:"bytes,9,opt,name=peer_intf,json=peerIntf,proto3" json:"peer_intf,omitempty"`
	PeerMac    string          `protobuf:"bytes,10,opt,name=peer_mac,json=peerMac,proto3" json:"peer_mac,omitempty"`
	Properties *LinkProperties `protobuf:"bytes,11,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *InternalLink) Reset() {
	*x = InternalLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalLink) ProtoMessage() {}

func (x *InternalLink) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalLink.ProtoReflect.Descriptor instead.
func (*InternalLink) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{6}
}

func (x *InternalLink) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *InternalLink) GetKubeNs() string {
	if x != nil {
		return x.KubeNs
	}
	return ""
}

func (x *InternalLink) GetNetNs() string {
	if x != nil {
		return x.NetNs
	}
	return ""
}

func (x *InternalLink) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *InternalLink) GetLocalName() string {
	if x != nil {
		return x.LocalName
	}
	return ""
}

func (x *InternalLink) GetLocalIntf() string {
	if x != nil {
		return x.LocalIntf
	}
	return ""
}

func (x *InternalLink) GetLocalMac() string {
	if x != nil {
		return x.LocalMac
	}
	return ""
}

func (x *InternalLink) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *InternalLink) GetPeerIntf() string {
	if x != nil {
		return x.PeerIntf
	}
	return ""
}

func (x *InternalLink) GetPeerMac() string {
	if x != nil {
		return x.PeerMac
	}
	return ""
}

func (x *InternalLink) GetProperties() *LinkProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type LinksBatchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Links     []*Link              `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
	Full      bool                 `protobuf:"varint,3,opt,name=full,proto3" json:"full,omitempty"`
	Timeout   int32                `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Namespace string               `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string               `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LinksBatchQuery) Reset() {
	*x = LinksBatchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinksBatchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinksBatchQuery) ProtoMessage() {}

func (x *LinksBatchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinksBatchQuery.ProtoReflect.Descriptor instead.
func (*LinksBatchQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{7}
}

func (x *LinksBatchQuery) GetVersion() *timestamp.Timestamp {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *LinksBatchQuery) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *LinksBatchQuery) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

func (x *LinksBatchQuery) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *LinksBatchQuery) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LinksBatchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LinksBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response bool    `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	Links    []*Link `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *LinksBatchResponse) Reset() {
	*x = LinksBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinksBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinksBatchResponse) ProtoMessage() {}

func (x *LinksBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinksBatchResponse.ProtoReflect.Descriptor instead.
func (*LinksBatchResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{8}
}

func (x *LinksBatchResponse) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

func (x *LinksBatchResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type InternalLinksBatchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links []*InternalLink `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *InternalLinksBatchQuery) Reset() {
	*x = InternalLinksBatchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalLinksBatchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalLinksBatchQuery) ProtoMessage() {}

func (x *InternalLinksBatchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalLinksBatchQuery.ProtoReflect.Descriptor instead.
func (*InternalLinksBatchQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{9}
}

func (x *InternalLinksBatchQuery) GetLinks() []*InternalLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type BoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response bool `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *BoolResponse) Reset() {
	*x = BoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolResponse) ProtoMessage() {}

func (x *BoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_kube_dtn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolResponse.ProtoReflect.Descriptor instead.
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_kube_dtn_proto_rawDescGZIP(), []int{10}
}

func (x *BoolResponse) GetResponse() bool {
	if x != nil {
		return x.Response
	}
	return false
}

var File_api_proto_v1_kube_dtn_proto protoreflect.FileDescriptor

var file_api_proto_v1_kube_dtn_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6b,
	0x75, 0x62, 0x65, 0x5f, 0x64, 0x74, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74,
	0x66, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76,
	0x36, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69,
	0x6e, 0x74, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x66, 0x52, 0x0c, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x74, 0x66, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x70, 0x6f, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x70, 0x6f,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x71, 0x0a, 0x09, 0x50, 0x6f, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x49,
	0x70, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x70, 0x22, 0x99, 0x01, 0x0a, 0x04, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x75, 0x6e, 0x69, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x8d, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x74,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63,
	0x6f, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f,
	0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x67, 0x61, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x62,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x72, 0x75, 0x70, 0x74, 0x5f, 0x63,
	0x6f, 0x72, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x72, 0x72, 0x75,
	0x70, 0x74, 0x43, 0x6f, 0x72, 0x72, 0x22, 0x4e, 0x0a, 0x08, 0x50, 0x6f, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x75, 0x62, 0x65, 0x5f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x75, 0x62, 0x65, 0x4e, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x75, 0x62,
	0x65, 0x5f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x75, 0x62, 0x65,
	0x4e, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x4e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x66, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x65, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x74, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66,
	0x75, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x50, 0x0a, 0x12, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x22, 0x41, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x22, 0x2a, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xa6, 0x02, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x81, 0x03, 0x0a, 0x06, 0x44, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x64, 0x12, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x0e, 0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x64,
	0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64,
	0x65, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x75, 0x70, 0x50, 0x6f, 0x64, 0x12,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x0a, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6f, 0x64, 0x12, 0x0c, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a,
	0x09, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_proto_v1_kube_dtn_proto_rawDescOnce sync.Once
	file_api_proto_v1_kube_dtn_proto_rawDescData = file_api_proto_v1_kube_dtn_proto_rawDesc
)

func file_api_proto_v1_kube_dtn_proto_rawDescGZIP() []byte {
	file_api_proto_v1_kube_dtn_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_kube_dtn_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_kube_dtn_proto_rawDescData)
	})
	return file_api_proto_v1_kube_dtn_proto_rawDescData
}

var file_api_proto_v1_kube_dtn_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_v1_kube_dtn_proto_goTypes = []interface{}{
	(*NetworkIntf)(nil),             // 0: pb.NetworkIntf
	(*NetworkNode)(nil),             // 1: pb.NetworkNode
	(*PodStatus)(nil),               // 2: pb.PodStatus
	(*Link)(nil),                    // 3: pb.Link
	(*LinkProperties)(nil),          // 4: pb.LinkProperties
	(*PodQuery)(nil),                // 5: pb.PodQuery
	(*InternalLink)(nil),            // 6: pb.InternalLink
	(*LinksBatchQuery)(nil),         // 7: pb.LinksBatchQuery
	(*LinksBatchResponse)(nil),      // 8: pb.LinksBatchResponse
	(*InternalLinksBatchQuery)(nil), // 9: pb.InternalLinksBatchQuery
	(*BoolResponse)(nil),            // 10: pb.BoolResponse
	(*timestamp.Timestamp)(nil),     // 11: google.protobuf.Timestamp
}
var file_api_proto_v1_kube_dtn_proto_depIdxs = []int32{
	0,  // 0: pb.NetworkNode.network_intfs:type_name -> pb.NetworkIntf
	2,  // 1: pb.NetworkNode.pod_status:type_name -> pb.PodStatus
	4,  // 2: pb.Link.properties:type_name -> pb.LinkProperties
	4,  // 3: pb.InternalLink.properties:type_name -> pb.LinkProperties
	11, // 4: pb.LinksBatchQuery.version:type_name -> google.protobuf.Timestamp
	3,  // 5: pb.LinksBatchQuery.links:type_name -> pb.Link
	3,  // 6: pb.LinksBatchResponse.links:type_name -> pb.Link
	6,  // 7: pb.InternalLinksBatchQuery.links:type_name -> pb.InternalLink
	7,  // 8: pb.Controller.ApplyLinks:input_type -> pb.LinksBatchQuery
	7,  // 9: pb.Controller.ApplyLinksWithTimeout:input_type -> pb.LinksBatchQuery
	7,  // 10: pb.Controller.ApplyLinksAsync:input_type -> pb.LinksBatchQuery
	7,  // 11: pb.Controller.ListLinks:input_type -> pb.LinksBatchQuery
	1,  // 12: pb.Controller.RemoveNode:input_type -> pb.NetworkNode
	9,  // 13: pb.Daemon.AddLinks:input_type -> pb.InternalLinksBatchQuery
	9,  // 14: pb.Daemon.DeleteLinks:input_type -> pb.InternalLinksBatchQuery
	9,  // 15: pb.Daemon.UpdateLinks:input_type -> pb.InternalLinksBatchQuery
	1,  // 16: pb.Daemon.ConfigurePod:input_type -> pb.NetworkNode
	1,  // 17: pb.Daemon.UnconfigurePod:input_type -> pb.NetworkNode
	5,  // 18: pb.Daemon.SetupPod:input_type -> pb.PodQuery
	5,  // 19: pb.Daemon.DestroyPod:input_type -> pb.PodQuery
	10, // 20: pb.Controller.ApplyLinks:output_type -> pb.BoolResponse
	10, // 21: pb.Controller.ApplyLinksWithTimeout:output_type -> pb.BoolResponse
	10, // 22: pb.Controller.ApplyLinksAsync:output_type -> pb.BoolResponse
	8,  // 23: pb.Controller.ListLinks:output_type -> pb.LinksBatchResponse
	10, // 24: pb.Controller.RemoveNode:output_type -> pb.BoolResponse
	10, // 25: pb.Daemon.AddLinks:output_type -> pb.BoolResponse
	10, // 26: pb.Daemon.DeleteLinks:output_type -> pb.BoolResponse
	10, // 27: pb.Daemon.UpdateLinks:output_type -> pb.BoolResponse
	10, // 28: pb.Daemon.ConfigurePod:output_type -> pb.BoolResponse
	10, // 29: pb.Daemon.UnconfigurePod:output_type -> pb.BoolResponse
	10, // 30: pb.Daemon.SetupPod:output_type -> pb.BoolResponse
	10, // 31: pb.Daemon.DestroyPod:output_type -> pb.BoolResponse
	20, // [20:32] is the sub-list for method output_type
	8,  // [8:20] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_proto_v1_kube_dtn_proto_init() }
func file_api_proto_v1_kube_dtn_proto_init() {
	if File_api_proto_v1_kube_dtn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_v1_kube_dtn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkIntf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinksBatchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinksBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalLinksBatchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_kube_dtn_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_kube_dtn_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_proto_v1_kube_dtn_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_kube_dtn_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_kube_dtn_proto_msgTypes,
	}.Build()
	File_api_proto_v1_kube_dtn_proto = out.File
	file_api_proto_v1_kube_dtn_proto_rawDesc = nil
	file_api_proto_v1_kube_dtn_proto_goTypes = nil
	file_api_proto_v1_kube_dtn_proto_depIdxs = nil
}
